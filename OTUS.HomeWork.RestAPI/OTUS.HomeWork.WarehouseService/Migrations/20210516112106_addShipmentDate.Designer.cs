// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OTUS.HomeWork.WarehouseService.DAL;

namespace OTUS.HomeWork.WarehouseService.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    [Migration("20210516112106_addShipmentDate")]
    partial class addShipmentDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasPostgresExtension("uuid-ossp")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("OTUS.HomeWork.WarehouseService.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("numeric")
                        .HasColumnName("base_price");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double>("Space")
                        .HasColumnType("double precision")
                        .HasColumnName("space");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision")
                        .HasColumnName("weight");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6636cd9f-b74d-4f9c-8d97-082f9914d42a"),
                            BasePrice = 100m,
                            Description = "",
                            Name = "Футбольный Мяч",
                            Space = 1.0,
                            Weight = 2.0
                        },
                        new
                        {
                            Id = new Guid("7f00e30e-21c1-4a64-8011-3ccd84182c3c"),
                            BasePrice = 400m,
                            Description = "",
                            Name = "Футбольная сетка",
                            Space = 0.5,
                            Weight = 1.5
                        },
                        new
                        {
                            Id = new Guid("0157153a-7dda-4328-adc6-1111cb713596"),
                            BasePrice = 20m,
                            Description = "",
                            Name = "Футболка",
                            Space = 0.10000000000000001,
                            Weight = 0.69999999999999996
                        },
                        new
                        {
                            Id = new Guid("246aac6d-a707-479f-ba09-0e18a9ac86fd"),
                            BasePrice = 20m,
                            Description = "",
                            Name = "Шорты",
                            Space = 0.10000000000000001,
                            Weight = 0.40000000000000002
                        });
                });

            modelBuilder.Entity("OTUS.HomeWork.WarehouseService.Domain.ProductCounter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<long>("RemainCount")
                        .HasColumnType("bigint")
                        .HasColumnName("remain_count");

                    b.Property<long>("ReserveCount")
                        .HasColumnType("bigint")
                        .HasColumnName("reserve_count");

                    b.Property<long>("SoldCount")
                        .HasColumnType("bigint")
                        .HasColumnName("sold_count");

                    b.HasKey("Id")
                        .HasName("pk_counters");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_counters_product_id");

                    b.ToTable("counters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec1794e6-113f-42be-95c6-378de6f2eb16"),
                            ProductId = new Guid("6636cd9f-b74d-4f9c-8d97-082f9914d42a"),
                            RemainCount = 100L,
                            ReserveCount = 0L,
                            SoldCount = 0L
                        },
                        new
                        {
                            Id = new Guid("8bf583df-5c80-42e2-9e0b-6864b0618926"),
                            ProductId = new Guid("7f00e30e-21c1-4a64-8011-3ccd84182c3c"),
                            RemainCount = 50L,
                            ReserveCount = 0L,
                            SoldCount = 0L
                        },
                        new
                        {
                            Id = new Guid("87d1328c-90fc-454b-876e-9ef4850b141b"),
                            ProductId = new Guid("0157153a-7dda-4328-adc6-1111cb713596"),
                            RemainCount = 20L,
                            ReserveCount = 4L,
                            SoldCount = 0L
                        },
                        new
                        {
                            Id = new Guid("28ef9d0b-03f2-42da-9e72-19ca81ea725c"),
                            ProductId = new Guid("246aac6d-a707-479f-ba09-0e18a9ac86fd"),
                            RemainCount = 25L,
                            ReserveCount = 1L,
                            SoldCount = 3L
                        });
                });

            modelBuilder.Entity("OTUS.HomeWork.WarehouseService.Domain.ReserveProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<long>("Count")
                        .HasColumnType("bigint")
                        .HasColumnName("count");

                    b.Property<DateTime>("ReserveDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("reserve_date");

                    b.HasKey("ProductId", "OrderNumber")
                        .HasName("pk_reserves");

                    b.ToTable("reserves");
                });

            modelBuilder.Entity("OTUS.HomeWork.WarehouseService.Domain.ShipmentOrder", b =>
                {
                    b.Property<string>("OrderNumber")
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("text")
                        .HasColumnName("delivery_address");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("text")
                        .HasColumnName("error_description");

                    b.Property<List<Guid>>("ProductIds")
                        .HasColumnType("uuid[]")
                        .HasColumnName("product_ids");

                    b.Property<DateTime>("ReadyToShipmentDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("ready_to_shipment_date");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("shipment_date");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<bool>("WasCancelled")
                        .HasColumnType("boolean")
                        .HasColumnName("was_cancelled");

                    b.HasKey("OrderNumber")
                        .HasName("pk_shipments");

                    b.ToTable("shipments");
                });

            modelBuilder.Entity("OTUS.HomeWork.WarehouseService.Domain.ProductCounter", b =>
                {
                    b.HasOne("OTUS.HomeWork.WarehouseService.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_counters_products_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OTUS.HomeWork.WarehouseService.Domain.ReserveProduct", b =>
                {
                    b.HasOne("OTUS.HomeWork.WarehouseService.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_reserves_products_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
