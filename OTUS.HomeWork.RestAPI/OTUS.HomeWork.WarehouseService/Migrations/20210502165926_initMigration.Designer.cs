// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OTUS.HomeWork.WarehouseService.DAL;

namespace OTUS.HomeWork.WarehouseService.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    [Migration("20210502165926_initMigration")]
    partial class initMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasPostgresExtension("uuid-ossp")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("OTUS.HomeWork.WarehouseService.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<double>("Space")
                        .HasColumnType("double precision")
                        .HasColumnName("space");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision")
                        .HasColumnName("weight");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2e63ad6-84e5-49a8-aae1-c5c47cf6272c"),
                            Description = "",
                            Name = "Футбольный Мяч",
                            Price = 100m,
                            Space = 1.0,
                            Weight = 2.0
                        },
                        new
                        {
                            Id = new Guid("0292db37-df46-4700-a2ee-452265d1ff21"),
                            Description = "",
                            Name = "Футбольная сетка",
                            Price = 400m,
                            Space = 0.5,
                            Weight = 1.5
                        },
                        new
                        {
                            Id = new Guid("d46e9ca8-c3ff-49f5-8568-20e393d84535"),
                            Description = "",
                            Name = "Футболка",
                            Price = 20m,
                            Space = 0.10000000000000001,
                            Weight = 0.69999999999999996
                        },
                        new
                        {
                            Id = new Guid("d87a45ce-6434-461f-aedc-485bcb449d5a"),
                            Description = "",
                            Name = "Шорты",
                            Price = 20m,
                            Space = 0.10000000000000001,
                            Weight = 0.40000000000000002
                        });
                });

            modelBuilder.Entity("OTUS.HomeWork.WarehouseService.Domain.ProductCounter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<long>("RemainCount")
                        .HasColumnType("bigint")
                        .HasColumnName("remain_count");

                    b.Property<long>("ReserveCount")
                        .HasColumnType("bigint")
                        .HasColumnName("reserve_count");

                    b.Property<long>("SoldCount")
                        .HasColumnType("bigint")
                        .HasColumnName("sold_count");

                    b.HasKey("Id")
                        .HasName("pk_counters");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_counters_product_id");

                    b.ToTable("counters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23f5353c-c3fc-477b-998e-b2674f3ab274"),
                            ProductId = new Guid("b2e63ad6-84e5-49a8-aae1-c5c47cf6272c"),
                            RemainCount = 10L,
                            ReserveCount = 0L,
                            SoldCount = 0L
                        },
                        new
                        {
                            Id = new Guid("97198e97-698d-4889-b0e6-8d8c7f6d2ef5"),
                            ProductId = new Guid("0292db37-df46-4700-a2ee-452265d1ff21"),
                            RemainCount = 5L,
                            ReserveCount = 0L,
                            SoldCount = 0L
                        },
                        new
                        {
                            Id = new Guid("45048509-9723-47a9-97e0-f4c54b6e7774"),
                            ProductId = new Guid("d46e9ca8-c3ff-49f5-8568-20e393d84535"),
                            RemainCount = 10L,
                            ReserveCount = 4L,
                            SoldCount = 0L
                        },
                        new
                        {
                            Id = new Guid("8b7f112f-82ee-4604-84a7-0c0339ff098e"),
                            ProductId = new Guid("d87a45ce-6434-461f-aedc-485bcb449d5a"),
                            RemainCount = 5L,
                            ReserveCount = 1L,
                            SoldCount = 3L
                        });
                });

            modelBuilder.Entity("OTUS.HomeWork.WarehouseService.Domain.ReserveProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<long>("Count")
                        .HasColumnType("bigint")
                        .HasColumnName("count");

                    b.Property<DateTime>("ReserveDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("reserve_date");

                    b.HasKey("ProductId", "OrderNumber")
                        .HasName("pk_reserves");

                    b.ToTable("reserves");
                });

            modelBuilder.Entity("OTUS.HomeWork.WarehouseService.Domain.ShipmentOrder", b =>
                {
                    b.Property<string>("OrderNumber")
                        .HasColumnType("text")
                        .HasColumnName("order_number");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("text")
                        .HasColumnName("delivery_address");

                    b.Property<List<Guid>>("ProductIds")
                        .HasColumnType("uuid[]")
                        .HasColumnName("product_ids");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("OrderNumber")
                        .HasName("pk_shipments");

                    b.ToTable("shipments");
                });

            modelBuilder.Entity("OTUS.HomeWork.WarehouseService.Domain.ProductCounter", b =>
                {
                    b.HasOne("OTUS.HomeWork.WarehouseService.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_counters_products_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OTUS.HomeWork.WarehouseService.Domain.ReserveProduct", b =>
                {
                    b.HasOne("OTUS.HomeWork.WarehouseService.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_reserves_products_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
