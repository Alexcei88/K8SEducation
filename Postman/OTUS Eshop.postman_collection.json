{
	"info": {
		"_postman_id": "aea29eae-ff76-40f1-a85d-f1f217fe858e",
		"name": "OTUS Eshop",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "registerUser1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'))\r",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))\r",
							"pm.collectionVariables.set(\"userName\", pm.variables.replaceIn('{{$randomUserName}}'))\r",
							"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'))\r",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn('{{$randomPhoneNumber}}'))\r",
							"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'))"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"userId1\", jsonData.userId);\r",
							"\r",
							"pm.test(\"user registered successfully\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "host",
						"value": "arch.homework",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{authbaseUrl}}/api/register",
					"host": [
						"{{authbaseUrl}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "getBalanceUser",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"user has an empty balance\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.userId).to.eql(pm.collectionVariables.get(\"userId1\"));\r",
							"    pm.expect(responseJson.balance).to.eql(0.0);\r",
							"\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{userId1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "host",
						"value": "arch.homework",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{billingBaseUrl}}/api/user/{{userId1}}/balance",
					"host": [
						"{{billingBaseUrl}}"
					],
					"path": [
						"api",
						"user",
						"{{userId1}}",
						"balance"
					]
				}
			},
			"response": []
		},
		{
			"name": "topUpBalanceUser",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"balance\", 300)\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"user balance was top up to 300 measure unit\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.userId).to.eql(pm.collectionVariables.get(\"userId1\"));\r",
							"    pm.expect(responseJson.balance).to.eql(pm.collectionVariables.get(\"balance\"));\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{userId1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "host",
						"value": "arch.homework",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"amount\": \"{{balance}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{billingBaseUrl}}/api/user/{{userId1}}/balance",
					"host": [
						"{{billingBaseUrl}}"
					],
					"path": [
						"api",
						"user",
						"{{userId1}}",
						"balance"
					]
				}
			},
			"response": []
		},
		{
			"name": "getProducts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"product1\", jsonData[0][\"id\"]);\r",
							"pm.collectionVariables.set(\"product2\", jsonData[1][\"id\"]);\r",
							"pm.collectionVariables.set(\"product3\", jsonData[2][\"id\"]);\r",
							"pm.collectionVariables.set(\"product4\", jsonData[3][\"id\"]);\r",
							"\r",
							"pm.test(\"get product list successfully\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{userId1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "host",
						"value": "arch.homework",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/product",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "createOrderSuccessfully",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"create order succesfully\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.status).to.eql(30);\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{userId1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "host",
						"value": "arch.homework",
						"type": "text"
					},
					{
						"key": "X-Custom-Authentification",
						"value": "eyJVc2VySWQiOiJjNjk0ZDQxMi1iMGQ3LTQxNTAtOWM1My04MTQxYzExZmNmNmYiLCJFeHBpcmVkVVRDRGF0ZVRpbWUiOiIyMDIxLTAyLTIyVDIwOjA0OjE5Ljc0MTg2MDNaIn0=",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"items\": [\r\n    {\r\n      \"productId\": \"{{product1}}\",\r\n      \"quantity\": 2\r\n    },\r\n    {\r\n      \"productId\": \"{{product3}}\",\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/order/{{userId1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"order",
						"{{userId1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getBalanceUser after ordering",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"user made payment. The balance was changed\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.userId).to.eql(pm.collectionVariables.get(\"userId1\"));\r",
							"    pm.expect(responseJson.balance).to.eql(80);\r",
							"\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{userId1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "host",
						"value": "arch.homework",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{billingBaseUrl}}/api/user/{{userId1}}/balance",
					"host": [
						"{{billingBaseUrl}}"
					],
					"path": [
						"api",
						"user",
						"{{userId1}}",
						"balance"
					]
				}
			},
			"response": []
		},
		{
			"name": "getHappyNotification",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){}, 4000);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"user has received a notification with success ordering\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{userId1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "host",
						"value": "arch.homework",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{notificationBaseUrl}}/api/notification/{{userId1}}",
					"host": [
						"{{notificationBaseUrl}}"
					],
					"path": [
						"api",
						"notification",
						"{{userId1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "createOrderNotEnoughBalance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"order cannot be created. balance is not a enough\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{userId1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "host",
						"value": "arch.homework",
						"type": "text"
					},
					{
						"key": "X-Custom-Authentification",
						"value": "eyJVc2VySWQiOiJjNjk0ZDQxMi1iMGQ3LTQxNTAtOWM1My04MTQxYzExZmNmNmYiLCJFeHBpcmVkVVRDRGF0ZVRpbWUiOiIyMDIxLTAyLTIyVDIwOjA0OjE5Ljc0MTg2MDNaIn0=",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"items\": [\r\n    {\r\n      \"productId\": \"{{product4}}\",\r\n      \"quantity\": 2\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/order/{{userId1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"order",
						"{{userId1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getBadNotification",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"user has received a notification with bad ordering\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.text()).to.include(\"Заказ отменен по причине\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){}, 4000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{userId1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "host",
						"value": "arch.homework",
						"type": "text"
					},
					{
						"key": "X-Custom-Authentification",
						"value": "eNfqOKmH10WfaNLBQaEHjA==",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{notificationBaseUrl}}/api/notification/{{userId1}}?skip=1",
					"host": [
						"{{notificationBaseUrl}}"
					],
					"path": [
						"api",
						"notification",
						"{{userId1}}"
					],
					"query": [
						{
							"key": "skip",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getBalanceUser",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the balance of user was not changed\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.userId).to.eql(pm.collectionVariables.get(\"userId1\"));\r",
							"    pm.expect(responseJson.balance).to.eql(80);\r",
							"\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{userId1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "host",
						"value": "arch.homework",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{billingBaseUrl}}/api/user/{{userId1}}/balance",
					"host": [
						"{{billingBaseUrl}}"
					],
					"path": [
						"api",
						"user",
						"{{userId1}}",
						"balance"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://arch.homework:80/eshop"
		},
		{
			"key": "baseUrlD",
			"value": "http://localhost:5000"
		},
		{
			"key": "authbaseUrl",
			"value": "http://arch.homework:80/auth"
		},
		{
			"key": "authbaseUrlD",
			"value": "http://localhost:31950"
		},
		{
			"key": "billingBaseUrl",
			"value": "http://arch.homework:80/billing"
		},
		{
			"key": "billingBaseUrlD",
			"value": "http://arch.homework:80/billing"
		},
		{
			"key": "notificationBaseUrl",
			"value": "http://arch.homework:80/notification"
		},
		{
			"key": "notificationBaseUrlD",
			"value": "http://localhost:5030"
		},
		{
			"key": "passwordUser1",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "login",
			"value": ""
		},
		{
			"key": "firstName",
			"value": ""
		},
		{
			"key": "phone",
			"value": ""
		},
		{
			"key": "lastName",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "userName",
			"value": ""
		},
		{
			"key": "userId1",
			"value": ""
		},
		{
			"key": "balance",
			"value": ""
		},
		{
			"key": "product1",
			"value": ""
		},
		{
			"key": "product2",
			"value": ""
		},
		{
			"key": "product3",
			"value": ""
		},
		{
			"key": "product4",
			"value": ""
		}
	]
}